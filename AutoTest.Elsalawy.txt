package Test;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.*;
import java.util.Objects;

public class AutoTest {
    WebDriver driver;
    @BeforeMethod
    public void preConditionMethod() {
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.navigate().to("https://awesomeqa.com/ui/index.php?route=common/home");
    }


    @Test  // T.C 15
    public void DeleteFromCompareList() throws InterruptedException {

        // add the first element (MacBook)
        driver.get("https://awesomeqa.com/ui/index.php?route=product/product&product_id=43");
        driver.findElement(By.cssSelector(".fa.fa-exchange")).click();
        Thread.sleep(3000);

        // add the second element (iPhone)
        driver.get("https://awesomeqa.com/ui/index.php?route=product/product&product_id=40");
        driver.findElement(By.cssSelector(".fa.fa-exchange")).click();
        Thread.sleep(3000);

        // go to comparison page
        driver.get("https://awesomeqa.com/ui/index.php?route=product/compare");

        // delete one item
        driver.findElement(By.cssSelector(".btn.btn-danger.btn-block")).click();
        Thread.sleep(3000);

        //  Check by Assertion
        boolean isDeleted;
        isDeleted = Objects.requireNonNull(driver.getPageSource()).contains("Success: You have modified your product comparison!");
        Assert.assertTrue(isDeleted, "Item was not deleted from the compare list.");
        if (isDeleted)
        {
            System.out.println("The item has been deleted and the test case 15 passes");
        }
        else
        {
            System.out.println("The item has not been deleted and the test case 15 fails");

        }
    }

    @Test  // T.C 16
    public void testDeleteFromWishlist() throws InterruptedException {

        // Login with valid credentials
        driver.get("https://awesomeqa.com/ui/index.php?route=account/login");
        driver.findElement(By.id("input-email")).sendKeys("husseinelsalawy@gmail.com");
        driver.findElement(By.id("input-password")).sendKeys("01203815297");
        driver.findElement(By.cssSelector("input[type='submit']")).click();

        // go to firstPage
        driver.navigate().to("https://awesomeqa.com/ui/index.php?route=common/home");

        // open a product and add it to wishlist
        driver.get("https://awesomeqa.com/ui/index.php?route=product/product&product_id=43");
        WebElement wishButton = driver.findElement(By.xpath("//button[contains(@onclick, 'wishlist.add')]"));
        wishButton.click();
        Thread.sleep(3000);

        // open the wishList
        driver.get("https://awesomeqa.com/ui/index.php?route=account/wishlist");
        Thread.sleep(2000);

        // delete the product
        driver.findElement(By.cssSelector(".btn.btn-danger")).click();
        Thread.sleep(3000);

        //  check by assertion on the statement " Your wish list is empty " is displayed
        WebElement emptyMessage = driver.findElement(By.cssSelector("#content > p"));
        String actualText = emptyMessage.getText();
        String expectedText = "Your wish list is empty.";

        if (actualText.equals(expectedText)) {
            System.out.println("Assertion passed: Wishlist is empty.");
        } else {
            System.out.println("Assertion failed: Expected '" + expectedText + "' but found '" + actualText + "'");
        }

    }

    @Test  // T.C 21
    public void testDeleteFromCart() throws InterruptedException {

        // Step 1: Add item to cart
        driver.get("https://awesomeqa.com/ui/index.php?route=product/product&product_id=40");
        driver.findElement(By.id("button-cart")).click();
        Thread.sleep(3000);

        // Step 2: Go to cart page
        driver.get("https://awesomeqa.com/ui/index.php?route=checkout/cart");
        Thread.sleep(2000);

        // delete the product
        driver.findElement(By.cssSelector(".btn.btn-danger[data-original-title='Remove']")).click();
        driver.findElement(By.cssSelector(".btn.btn-primary"));
        Thread.sleep(3000);
        WebElement cartContent = driver.findElement(By.cssSelector("#content"));
        String cartText = cartContent.getText();
        Assert.assertTrue(cartText.contains("Your shopping cart is empty!"), "Cart is not empty!");
    }

    @Test  // T.C 22
    public void testDisplayProductsAsListOrGrid() throws InterruptedException {
        driver.get("https://awesomeqa.com/ui/index.php?route=product/category&path=20");

        // Click on List view
        driver.findElement(By.id("list-view")).click();
        Thread.sleep(2000);

        // Click on Grid view
        driver.findElement(By.id("grid-view")).click();
        Thread.sleep(2000);

        // Check Grid view is active
        boolean isGridActive = driver.findElement(By.id("grid-view")).getAttribute("class").contains("active");
        Assert.assertTrue(isGridActive, "Grid view is not active.");

        if (isGridActive) {
            System.out.println("Grid view is active. Test case 22 passes.");
        } else {
            System.out.println("Grid view is not active. Test case 22 fails.");
        }
    }

    @Test  // T.C 23
    public void testSortProductsBy() throws InterruptedException {

        driver.get("https://awesomeqa.com/ui/index.php?route=product/category&path=20");
        // Select sort by: Price (High > Low)
        WebElement sortDropdown = driver.findElement(By.id("input-sort"));
        sortDropdown.click();
        sortDropdown.findElement(By.cssSelector("option[value*='price&order=DESC']")).click();
        Thread.sleep(3000);

        // تأكد من أن الـ option المختار هو السعر من الأعلى للأقل
        String selectedOption = driver.findElement(By.cssSelector("#input-sort option:checked")).getText();
        Assert.assertTrue(selectedOption.contains("Price (High > Low)"), "Sorting option not applied correctly.");

        System.out.println("Sort option applied: " + selectedOption + ". Test case 23 passes.");
    }

    @Test  // T.C 24
    public void testNumberOfProductsDisplayed() throws InterruptedException {

        driver.get("https://awesomeqa.com/ui/index.php?route=product/category&path=20");
        Thread.sleep(2000);

        // احسب عدد المنتجات المعروضة
        int productCount = driver.findElements(By.cssSelector(".product-layout")).size();
        Thread.sleep(2000);

        // تحقق أن عددهم أكبر من 0
        Assert.assertTrue(productCount > 0, "No products displayed on the page.");
        Thread.sleep(2000);

        System.out.println("Number of products displayed: " + productCount + ". Test case 24 passes.");
        Thread.sleep(2000);
    }

    @Test  // T.C 25
    public void testChangeCurrencyAndCheckPrice() throws InterruptedException {

        driver.get("https://awesomeqa.com/ui/index.php?route=product/category&path=20");

        // click on currency label in the top of page
        driver.findElement(By.cssSelector("form#form-currency button")).click();
        Thread.sleep(1000);

        //  select Euro
        driver.findElement(By.name("EUR")).click();
        Thread.sleep(2000);

        // chick if the prises  displayed with €
        String price = driver.findElement(By.cssSelector(".price")).getText();
        boolean isEuro = price.contains("€");

        Assert.assertTrue(isEuro, "Currency not changed to Euro in product prices.");

        if (isEuro) {
            System.out.println("Currency changed to Euro. Test case 25 passes.");
        } else {
            System.out.println("Currency not reflected in product prices. Test case 25 fails.");
        }
    }

    @AfterMethod
    public void ShutDown() {
        driver.quit();
    }}
